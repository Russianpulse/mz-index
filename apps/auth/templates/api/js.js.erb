(function() {
	// возвращает cookie с именем name, если есть, если нет, то undefined
	function getCookie(name) {
		var matches = document.cookie.match(new RegExp(
			"(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
		));
		return matches ? decodeURIComponent(matches[1]) : undefined;
	}

  function setCookie(name, value, options) {
    options = options || {};

    var expires = options.expires;

    if (typeof expires == "number" && expires) {
      var d = new Date();
      d.setTime(d.getTime() + expires * 1000);
      expires = options.expires = d;
    }
    if (expires && expires.toUTCString) {
      options.expires = expires.toUTCString();
    }

    value = encodeURIComponent(value);

    var updatedCookie = name + "=" + value;

    for (var propName in options) {
      updatedCookie += "; " + propName;
      var propValue = options[propName];
      if (propValue !== true) {
        updatedCookie += "=" + propValue;
      }
    }

    document.cookie = updatedCookie;
  }

  var Mazavr = window.$mz = window.$mz || function() {};

  var Auth = function() {
    if(!this.token()) {
      this.refreshToken();
    }
  };

  Auth.prototype.token = function() {
    return getCookie('mz.token');
  };

  Auth.prototype.refreshToken = function() {
    var req = $.getJSON("http://local.mazavr.com:2300/me/api/token").done(function(data) {
      setCookie('mz.token', data.token, { expires: 30, path: '/' })
    }).fail(function(data) {
      console.log('failed to get new token', data);
    });
  }

  Mazavr.Auth = Auth;

  new Auth();
})();
